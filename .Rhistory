shiny::runApp('Documents/GitHub/Bets')
install.packages("anytime")
runApp('Documents/GitHub/Bets')
runApp('Documents/GitHub/Bets')
install.packages("DT")
install.packages("DT")
shiny::runApp('Documents/GitHub/Bets')
Data %>%
group_by(Country_Name) %>%
summarise(Reports = n()) -> df2
df %>%
left_join(x = .,
y = df2,
by = "Country_Name") -> df2
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv')
df <- df[, c(1, 3)]
names(df) <- c("Country_Name", "Code")
df %>%
left_join(x = .,
y = df2,
by = "Country_Name") -> df2
ggplot() +
geom_map(data = WorldData,
map = WorldData,
aes(x = long, y = lat, group = group, map_id = region),
fill = "#00CC66",
colour = "black",
size = 0.3) +
geom_map(data = df2,
map = WorldData,
aes(fill = Reports, map_id = Country_Name),
colour = "black",
size = 0.5) +
coord_map("rectangular",
lat0 = 0,
xlim = c(-180,180),
ylim = c(-60, 90)) +
labs(fill = "Temperature",
title = "Temperature",
x = "",
y="",
subtitle = "Celsius Degrees",
caption = "Prueba") +
theme(legend.position = "bottom")
WorldData <- map_data("world")
WorldData %>%
filter(region != "Antarctica") -> WorldData
ggplot() +
geom_map(data = WorldData,
map = WorldData,
aes(x = long, y = lat, group = group, map_id = region),
fill = "#00CC66",
colour = "black",
size = 0.3) +
geom_map(data = df2,
map = WorldData,
aes(fill = Reports, map_id = Country_Name),
colour = "black",
size = 0.5) +
coord_map("rectangular",
lat0 = 0,
xlim = c(-180,180),
ylim = c(-60, 90)) +
labs(fill = "Temperature",
title = "Temperature",
x = "",
y="",
subtitle = "Celsius Degrees",
caption = "Prueba") +
theme(legend.position = "bottom")
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = 'Blues',
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = 'GDP Billions US$', tickprefix = '$') %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')))
library("plotly")
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = 'Blues',
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = 'GDP Billions US$', tickprefix = '$') %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')))
WorldData %>%
filter(region != "Antarctica") -> WorldData
ggplot() +
geom_map(data = WorldData,
map = WorldData,
aes(x = long, y = lat, group = group, map_id = region),
fill = "white",
colour = "black",
size = 0.3) +
geom_map(data = df2,
map = WorldData,
aes(fill = Reports, map_id = Country_Name),
colour = "black",
size = 0.5) +
coord_map("rectangular",
lat0 = 0,
xlim = c(-180,180),
ylim = c(-60, 90)) +
labs(fill = "Temperature",
title = "Temperature",
x = "",
y="",
subtitle = "Celsius Degrees",
caption = "Prueba") +
theme(legend.position = "bottom")
ggplot() +
geom_map(data = WorldData,
map = WorldData,
aes(x = long, y = lat, group = group, map_id = region),
fill = "white",
colour = "black",
size = 0.3) +
geom_map(data = df2,
map = WorldData,
aes(fill = Reports, map_id = Country_Name),
colour = "black",
size = 0.5) +
coord_map("rectangular",
lat0 = 0,
xlim = c(-180,180),
ylim = c(-60, 90)) +
labs(fill = "Temperature",
title = "Temperature",
x = "",
y="",
subtitle = "Celsius Degrees",
caption = "Prueba") +
theme(legend.position = "left")
ggplot() +
geom_map(data = WorldData,
map = WorldData,
aes(x = long, y = lat, group = group, map_id = region),
fill = "white",
colour = "black",
size = 0.3) +
geom_map(data = df2,
map = WorldData,
aes(fill = Reports, map_id = Country_Name),
colour = "black",
size = 0.5) +
coord_map("rectangular",
lat0 = 0,
xlim = c(-180,180),
ylim = c(-60, 90)) +
labs(fill = "Temperature",
title = "Temperature",
x = "",
y="",
subtitle = "Celsius Degrees",
caption = "Prueba") +
theme(legend.position = "right")
ggplot() +
geom_map(data = WorldData,
map = WorldData,
aes(x = long, y = lat, group = group, map_id = region),
fill = "white",
colour = "black",
size = 0.3) +
geom_map(data = df2,
map = WorldData,
aes(fill = Reports, map_id = Country_Name),
colour = "black",
size = 0.5) +
coord_map("rectangular",
lat0 = 0,
xlim = c(-180,180),
ylim = c(-60, 90)) +
labs(fill = "Eventos",
title = "Numero de Eventos por Pais",
x = "",
y="",
subtitle = "Actividad basada en Bookies",
caption = "Prueba") +
theme(legend.position = "right")
View(df2)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv')
df <- df[, c(1, 3)]
names(df) <- c("Country_Name", "Code")
Data %>%
group_by(Country_Name) %>%
summarise(Reports = n()) -> df2
setwd("~/Documents/GitHub/Bets")
write.csv(x = df2, file = "df2.csv")
write.csv(x = df, file = "df.csv")
df2 <- read.delim(file = "world_codes.csv", header = TRUE, sep = ",", dec = ".", stringsAsFactors = FALSE)
Data %>%
group_by(Country_Name) %>%
summarise(Reports = n()) %>%
left_join(x = .,
y = df2,
by = "Country_Name") -> df2
View(df2)
ggplot() +
geom_map(data = WorldData,
map = WorldData,
aes(x = long, y = lat, group = group, map_id = region),
fill = "white",
colour = "black",
size = 0.3) +
geom_map(data = df2,
map = WorldData,
aes(fill = Reports, map_id = Country_Name),
colour = "black",
size = 0.5) +
coord_map("rectangular",
lat0 = 0,
xlim = c(-180,180),
ylim = c(-60, 90)) +
labs(fill = "Eventos",
title = "Numero de Eventos por Pais",
x = "",
y="",
subtitle = "Actividad basada en Bookies",
caption = "Prueba") +
theme(legend.position = "right")
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = 'Blues',
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = 'GDP Billions US$', tickprefix = '$') %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')))
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = 'Blues',
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = 'GDP Billions US$', tickprefix = '$') %>%
layout(title = "Eventos por Pais",
geo = list(showframe = TRUE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')))
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = 'Blues',
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = 'GDP Billions US$', tickprefix = '$') %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')))
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = 'Blues',
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = "Eventos") %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator')))
View(df2)
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = 'Blues',
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = "Eventos") %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator'),
lakecolor = toRGB("white")))
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = 'Blues',
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = "Eventos") %>%
colorbar(title = "") %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator'),
lakecolor = toRGB("white")))
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = 'Greens',
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = "Eventos") %>%
colorbar(title = "") %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator'),
lakecolor = toRGB("white")))
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = 'Reds',
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = "Eventos") %>%
colorbar(title = "") %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = 'Mercator'),
lakecolor = toRGB("white")))
?add_trace
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = "Reds",
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = "Eventos") %>%
colorbar(title = "") %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = "Mercator"),
lakecolor = toRGB("white")))
?layout
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = "Reds",
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = "Eventos") %>%
colorbar(title = "") %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = "Mercator"),
lakecolor = toRGB("white")),
legend = list(orientation = "h"))
runApp()
plot_geo(df2) %>%
add_trace(z = ~Reports,
color = ~Reports,
colors = "Blues",
text = ~Country_Name,
locations = ~Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = "Eventos") %>%
colorbar(title = "") %>%
layout(title = "Eventos por Pais",
geo = list(showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = "Mercator"),
lakecolor = toRGB("white")),
legend = list(orientation = "h"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(df2)
runApp()
View(df2)
runApp()
runApp()
runApp()
runApp()
runApp()
View(df2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
messageData
runApp()
runApp()
runApp()
runApp()
runApp()
messageData <- data.frame(from = c("Jorge", "Carlos", "Raquel"), Message = c("Hola", "Que", "Hace"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.pockages("RODBC")
install.packages("RODBC")
devtools::install_github("r-dbi/odbc")
devtools::install_github("r-dbi/odbc")
library("odbc")
library("odbc")
rm(list = ls())
library("shinydashboard")
library("httr")
library("jsonlite")
library("dplyr")
library("anytime")
library("tidyr")
library("ggplot2")
# library("ggmap")
library("DT")
library("odbc")
shiny::runApp()
runApp()
